# Python 3.5.2
# TITLE: Conjectures

# 1. The Collatz Conjecture - Recursive
# Prints the Collatz Conjecture for integer n.
#
# Given any initial natural number, consider the sequence 
# of numbers generated by repeatedly following the rule:
# - divide by two if the number is even or
# - multiply by 3 and add 1 if the number is odd.
#
# The Collatz conjecture states that this sequence 
# always terminates at 1. 
#
# For example, the sequence generated by 17 is:
# 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1

def check_argument(n):
    """ Check Exceptions. """
    # TODO: Check other cases as well.
    if (n < 1):
        print ("ERROR: %.2f is less than 1!\n---" % n)
        return False
    else:
        return True

def conjecture(n):
    """ Find conjecture. Recursive."""
    print ("%.0f" % n)
    if (n == 1):
        print ("---")
        return
    elif (n % 2 == 0):
        n = n / 2
        conjecture(n)
    else:
        n = n * 3 + 1
        conjecture(n)

def collatz(n):
    """ Find Collatz Conjecture if argument is valid. """
    if (check_argument(n) == False):
        return
    else:
        conjecture(n)
    
# TEST
collatz(0)
collatz(1)
collatz(7)
collatz(17)

# 2 - Some Other Conjecture
# Other information.
